[package]
name = "selendra-node"
version = "2.0.0"
build = "build.rs"
authors = { workspace = true }
edition = { workspace = true }

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
thiserror = { workspace = true }
async-trait = { workspace = true }
clap = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true }
jsonrpsee = { workspace = true, features = ["server", "macros"] }
log = { workspace = true }
parity-scale-codec = { workspace = true, features = ["derive"]  }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
static_assertions = { workspace = true }

# Substrate
prometheus-endpoint = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-offchain = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true } 
sc-transaction-pool-api = { workspace = true }


sp-api = { workspace = true, features = ["default"] }
sp-arithmetic = { workspace = true, features = ["default"] }
sp-block-builder = { workspace = true, features = ["default"] }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true, features = ["default"] }
sp-consensus-aura = { workspace = true, features = ["default"] }
sp-core = { workspace = true, features = ["default"] }
sp-inherents = { workspace = true, features = ["default"] }
sp-io = { workspace = true }
sp-offchain = { workspace = true, features = ["default"] }
sp-runtime = { workspace = true, features = ["default"] }
sp-runtime-interface = { workspace = true }
sp-session = { workspace = true, features = ["default"] }
sp-timestamp = { workspace = true, features = ["default"] }
sp-transaction-pool = { workspace = true, features = ["default"] }
# These dependencies are used for RPC
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
# These dependencies are used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true, optional = true }
frame-system = { workspace = true }
pallet-transaction-payment = { workspace = true }

# Frontier
fc-api = { workspace = true }
fc-cli = { workspace = true }
fc-consensus = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fc-storage = { workspace = true }
fp-account = { workspace = true }
fp-dynamic-fee = { workspace = true, features = ["default"] }
fp-evm = { workspace = true, features = ["default"] }
fp-rpc = { workspace = true, features = ["default"] }

# ALephBFT
selendra-runtime-interfaces = { workspace = true }
finality-aleph = { workspace = true }
pallet-aleph-runtime-api = { workspace = true }

# Selendra
selendra-runtime = { workspace = true, features = ["std"] }
selendra-primitives = { workspace = true }
client-runtime-api = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = [
	"std",
	"rocksdb",
	"sql",
	"txpool",
	"rpc-binary-search-estimate",
]
std = [
    "parity-scale-codec/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-runtime/std",
    "sp-transaction-pool/std",
    "selendra-primitives/std",
    "sp-io/std",
    "selendra-runtime-interfaces/std",
]
rocksdb = [
	"sc-cli/rocksdb",
	"sc-service/rocksdb",
	"fc-cli/rocksdb",
	"fc-db/rocksdb",
	"fc-mapping-sync/rocksdb",
	"fc-rpc/rocksdb",
	"selendra-runtime/with-rocksdb-weights",
]
paritydb = [
	"selendra-runtime/with-paritydb-weights",
]
sql = [
	"fc-db/sql",
	"fc-mapping-sync/sql",
]
txpool = ["fc-rpc/txpool"]
rpc-binary-search-estimate = ["fc-rpc/rpc-binary-search-estimate"]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"selendra-runtime/runtime-benchmarks",
]
