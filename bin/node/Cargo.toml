[package]
name = "selendra-node"
version = "2.0.2"
build = "build.rs"
license = "GPL-3.0-or-later"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "selendra-node"

[dependencies]
parity-scale-codec = { workspace = true, features = ["derive"] }
log = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
futures = { workspace = true }
static_assertions = { workspace = true }
thiserror = { workspace = true }

sc-cli = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-consensus-slots = { workspace = true }
sp-inherents = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-service = { workspace = true }
sc-client-db = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-arithmetic = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true }

frame-benchmarking-cli = { workspace = true, optional = true }
frame-benchmarking = { workspace = true, optional = true }

finality-aleph = { workspace = true }
primitives = { workspace = true }
client-runtime-api = { workspace = true, features = ["std"] }
pallet-aleph-runtime-api = { workspace = true, features = ["std"] }

# Frontier
fc-api = { workspace = true }
fc-cli = { workspace = true }
fc-consensus = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fc-storage = { workspace = true }
fp-account = { workspace = true }
fp-dynamic-fee = { workspace = true, features = ["default"] }
fp-evm = { workspace = true, features = ["default"] }
fp-rpc = { workspace = true, features = ["default"] }

# These dependencies are used for the node's RPCs
jsonrpsee = { workspace = true, features = ["server"] }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sp-api = { workspace = true }
sp-blockchain = { workspace = true }

substrate-frame-rpc-system = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }

selendra-runtime = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = [
    "std",
    "rocksdb",
    "sql",
	"txpool",
	"rpc-binary-search-estimate",
]
std = [
    "parity-scale-codec/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-runtime/std",
    "sp-transaction-pool/std",
    "primitives/std",
    "sp-io/std",
]
runtime-benchmarks = [
    "frame-benchmarking",
    "frame-benchmarking-cli/runtime-benchmarks",
    "selendra-runtime/runtime-benchmarks",
]
rocksdb = [
    "sc-cli/rocksdb",
    "sc-client-db/rocksdb",
    "sc-service/rocksdb",
    "fc-cli/rocksdb",
	"fc-db/rocksdb",
	"fc-mapping-sync/rocksdb",
	"fc-rpc/rocksdb",
]

only_legacy = [
    "finality-aleph/only_legacy"
]
sql = [
	"fc-db/sql",
	"fc-mapping-sync/sql",
]
txpool = ["fc-rpc/txpool"]
rpc-binary-search-estimate = ["fc-rpc/rpc-binary-search-estimate"]