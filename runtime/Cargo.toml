[package]
name = "selendra-runtime"
version = "2.0.0"
authors = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
parity-scale-codec = { workspace = true, features = ["derive"] }
scale-info = { workspace = true }
smallvec = { workspace = true }

# Substrate
sp-api = { workspace = true }
sp-application-crypto = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-staking = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# Substrate FRAME
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }

# Substrate Pallet
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true, features = ["insecure_zero_ed"] }
pallet-identity = { workspace = true }
pallet-indices = { workspace = true }
pallet-multisig = { workspace = true }
pallet-proxy = { workspace = true }
pallet-recovery = { workspace = true }
pallet-session = { workspace = true }
pallet-staking = { workspace = true }
pallet-staking-runtime-api = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }

# Frontier Primitive
fp-account = { workspace = true, features = ["serde"] }
fp-evm = { workspace = true, features = ["serde"] }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }

# Frontier Pallet
# pallet-base-fee = { workspace = true }
# pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
# pallet-hotfix-sufficients = { workspace = true }
pallet-custom-signatures = { workspace = true }
pallet-dynamic-evm-base-fee = { workspace = true }

# Alep Pallet
pallet-aleph = { workspace = true }
pallet-aleph-runtime-api = { workspace = true }
pallet-committee-management = { workspace = true }
pallet-elections = { workspace = true }

# Selendra
selendra-primitives = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std", "with-rocksdb-weights"]
with-rocksdb-weights = []
with-paritydb-weights = []
std = [
	"parity-scale-codec/std",
	"scale-info/std",
	# Substrate
	"sp-api/std",
	"sp-application-crypto/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-staking/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
	# Substrate FRAME
	"frame-benchmarking/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system-benchmarking?/std",
	# Substrate Pallet
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-identity/std",
	"pallet-indices/std",
	"pallet-multisig/std",
	"pallet-proxy/std",
	"pallet-recovery/std",
	"pallet-session/std",
	"pallet-staking/std",
	"pallet-staking-runtime-api/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-utility/std",
	# Frontier
	"fp-account/std",
	"fp-evm/std",
	"fp-rpc/std",
	"fp-self-contained/std",
	# Frontier FRAME
	# "pallet-base-fee/std",
	# "pallet-dynamic-fee/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-evm-chain-id/std",
	"pallet-evm-precompile-modexp/std",
	"pallet-evm-precompile-sha3fips/std",
	"pallet-evm-precompile-simple/std",
	# "pallet-hotfix-sufficients/std",
	"pallet-custom-signatures/std",
	"pallet-dynamic-evm-base-fee/std",

	# Alep Pallet
	"pallet-aleph/std",
	"pallet-aleph-runtime-api/std",
	"pallet-committee-management/std",
	"pallet-elections/std",
	
	# Selendra
	"selendra-primitives/std"
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
	# "pallet-hotfix-sufficients/runtime-benchmarks",
]

short_session = []