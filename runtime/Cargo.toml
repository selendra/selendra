[package]
name = "selendra-runtime"
version = "3.1.0"
authors = ["Selendra <info@selendra.org>"]
edition = "2021"
license = "GPL-3.0-or-later"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { package = "parity-scale-codec", version = "3.5.0", default-features = false, features = ["derive"] }
scale-info = { version = "2.0.1", default-features = false, features = ["derive"] }

smallvec = { workspace = true }
hex-literal = { workspace = true }
serde = { workspace = true }

sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-staking = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-io = { workspace = true }

frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
frame-benchmarking = { workspace = true, optional = true }

# Core pallet
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-session = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-staking = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury = { workspace = true }
pallet-nomination-pools = { workspace = true }
pallet-nomination-pools-runtime-api = { workspace = true }

# utility pallet
pallet-identity = { workspace = true }
pallet-vesting = { workspace = true }
pallet-multisig = { workspace = true }
pallet-utility = { workspace = true }

# Governance pallet
pallet-democracy = { workspace = true }
pallet-membership = { workspace = true }
pallet-collective = { workspace = true }
pallet-sudo = { workspace = true }

# Consensus pallet
pallet-selendra = { workspace = true }
pallet-elections = { workspace = true }
pallet-committee-management = { workspace = true }

# Indranet pallet
pallet-insecure-randomness-collective-flip = { workspace = true }
indranet-types = { workspace = true }
indranet-pallets = { workspace = true }
indranet-mq-runtime-api = { workspace = true }
indra-offchain-rollup = { workspace = true }

# Assets pallet
pallet-assets = { workspace = true }
pallet-uniques = { workspace = true }

# RMRK pallet
pallet-rmrk-core = { workspace = true }
# rmrk-traits = { workspace = true }

# Local
selendra-primitives= { workspace = true }
selendra-runtime-common = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]
std = [
    "codec/std",
    "selendra-primitives/std",
    "selendra-runtime-common/std",

    "sp-offchain/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-io/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-staking/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",

    "frame-executive/std",
    "frame-support/std",
    "frame-try-runtime/std",
    "frame-system/std",
    "frame-system-rpc-runtime-api/std",

    "pallet-selendra/std",
    "pallet-aura/std",
	"pallet-assets/std",
	"pallet-uniques/std",
    "pallet-authorship/std",
    "pallet-balances/std",
    "pallet-elections/std",
    "pallet-identity/std",
    "pallet-insecure-randomness-collective-flip/std",
    "pallet-session/std",
    "pallet-staking/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-treasury/std",
    "pallet-vesting/std",
    "pallet-multisig/std",
    "pallet-utility/std",
    "pallet-nomination-pools/std",
    "pallet-nomination-pools-runtime-api/std",
    "pallet-committee-management/std",
    "pallet-democracy/std",
    "pallet-membership/std",
    "pallet-collective/std",

	"indra-offchain-rollup/std",
	"indranet-mq-runtime-api/std",
	"indranet-pallets/std",
	"pallet-rmrk-core/std",
	# "rmrk-traits/std",
]

try-runtime = [
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-try-runtime",
    "frame-system/try-runtime",
    "pallet-nomination-pools/try-runtime",
    "pallet-selendra/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-authorship/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-elections/try-runtime",
    "pallet-identity/try-runtime",
    "pallet-insecure-randomness-collective-flip/try-runtime",
    "pallet-session/try-runtime",
    "pallet-staking/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-treasury/try-runtime",
    "pallet-vesting/try-runtime",
    "pallet-multisig/try-runtime",
    "pallet-utility/try-runtime",
    "pallet-committee-management/try-runtime",
]

runtime-benchmarks = [
    "frame-system/runtime-benchmarks",
    "frame-benchmarking/runtime-benchmarks",
]

runtime-testnet = []
fast-runtime = ["runtime-testnet"]
