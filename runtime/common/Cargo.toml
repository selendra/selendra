[package]
name = "selendra-runtime-common"
version.workspace = true
authors.workspace = true
edition.workspace = true

[dependencies]
libsecp256k1 = { version = "0.7.0", default-features = false }
impl-trait-for-tuples = "0.2.2"
bitvec = { version = "1.0.0", default-features = false, features = ["alloc"] }
parity-scale-codec = { version = "3.6.1", default-features = false, features = ["derive"] }
log = { version = "0.4.17", default-features = false }
rustc-hex = { version = "2.1.0", default-features = false }
scale-info = { version = "2.5.0", default-features = false, features = ["derive"] }
serde = { version = "1.0.163", default-features = false, features = ["alloc"] }
serde_derive = { version = "1.0.117" }
static_assertions = "1.1.0"

sp-api = { workspace = true }
sp-inherents = { workspace = true }
sp-std = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true, features=["serde"] }
sp-session = { workspace = true }
sp-staking = { workspace = true, features=["serde"] }
sp-core = { workspace = true , features=["serde"] }
sp-npos-elections = { workspace = true, features=["serde"] }

frame-support = { workspace = true }
frame-system = { workspace = true }
frame-election-provider-support = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
pallet-babe = { workspace = true, optional = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-fast-unstake = { workspace = true }
pallet-session = { workspace = true }
pallet-staking = { workspace = true }
pallet-staking-reward-fn = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-vesting = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-treasury = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }

selendra-primitives = { workspace = true }

[dev-dependencies]
hex-literal = { workspace = true }
serde_json = { workspace = true }
libsecp256k1 = { workspace = true }
frame-support-test = { workspace = true }
pallet-babe = { workspace = true }
pallet-treasury = { workspace = true }
sp-keystore = { workspace = true }
sp-keyring = { workspace = true }

[features]
default = ["std"]
no_std = []
std = [
	"bitvec/std",
	"parity-scale-codec/std",
	"scale-info/std",
	"log/std",
	"rustc-hex/std",
	"serde/std",
	"selendra-primitives/std",
	"sp-inherents/std",
	"sp-core/std",
	"sp-api/std",
	"sp-std/std",
	"sp-io/std",
	"frame-support/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-session/std",
	"pallet-fast-unstake/std",
	"pallet-staking/std",
	"pallet-staking-reward-fn/std",
	"pallet-timestamp/std",
	"pallet-vesting/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"pallet-election-provider-multi-phase/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-staking/std",
	"frame-system/std",
	"libsecp256k1/std",
	"sp-npos-elections/std",
]
runtime-benchmarks = [
	"libsecp256k1/hmac",
	"libsecp256k1/static-context",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-fast-unstake/runtime-benchmarks"
]
try-runtime = [
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-session/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-fast-unstake/try-runtime",
]
