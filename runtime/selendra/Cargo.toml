[package]
name = "selendra-runtime"
version.workspace = true
authors.workspace = true
edition.workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[package.metadata.cargo-machete]
ignored = ["scale-info"] # Used in the macros

[dependencies]
lazy_static = { workspace = true }
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
hex-literal = { workspace = true, optional = true }
bitvec = { workspace = true, features = ["alloc"] }
log = { workspace = true }
rustc-hex = { workspace = true }
serde_derive = { workspace = true, optional = true }
static_assertions = { workspace = true }
smallvec = { workspace = true }

# primitives dependency
sp-authority-discovery = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-block-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-api = { workspace = true }
sp-arithmetic = { workspace = true }
sp-std = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-staking = { workspace = true }
sp-core = { workspace = true }
sp-session = { workspace = true }
sp-version = { workspace = true }
sp-npos-elections = { workspace = true }

# frame dependency
frame-election-provider-support = { workspace = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = {workspace = true }
frame-system-rpc-runtime-api = { workspace = true }

# pallet dependency
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-babe = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-balances = { workspace = true }
pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-conviction-voting = { workspace = true }
pallet-contracts = { workspace = true }
pallet-contracts-primitives = { workspace = true }
pallet-democracy = { workspace = true }
pallet-elections-phragmen = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }
pallet-fast-unstake = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-identity = { workspace = true }
pallet-im-online = { workspace = true }
pallet-indices = { workspace = true }
pallet-membership = { workspace = true }
pallet-message-queue = { workspace = true }
pallet-multisig = { workspace = true }
pallet-offences = { workspace = true }
pallet-preimage = { workspace = true }
pallet-proxy = { workspace = true }
pallet-recovery = { workspace = true }
pallet-referenda = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-session = { workspace = true }
pallet-staking = { workspace = true }
pallet-staking-reward-curve = { workspace = true }
pallet-staking-runtime-api = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-sudo = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
pallet-vesting = { workspace = true }
pallet-whitelist = { workspace = true }

# benchmarking dependency
frame-benchmarking = { workspace = true, optional = true }
frame-try-runtime = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
pallet-election-provider-support-benchmarking = { workspace = true, optional = true }
pallet-offences-benchmarking = { workspace = true, optional = true }
pallet-session-benchmarking = { workspace = true, optional = true }

# starknet
blockifier = { workspace = true  }
starknet_api = { workspace = true }
pallet-starknet = { workspace = true  }
pallet-starknet-runtime-api = { workspace = true }
mp-program-hash = { workspace = true }
mp-felt = { workspace = true }
mp-simulations = { workspace = true }
mp-chain-id = { workspace = true }
mp-hashers = { workspace = true }

# Selendra
selendra-runtime-common = { workspace = true }
selendra-primitives = { workspace = true }
selendra-runtime-constants = { workspace = true }

[features]
default = ["std"]
madara-state-root = []
disable-transaction-fee = []
disable-runtime-api = []
on-chain-release-build = [
	"sp-api/disable-logging",
]
fast-runtime = []
runtime-testnet = []
runtime-metrics = ["sp-io/with-tracing"]
dev = []
std = [
	"serde_derive",
	"serde/std",
	"log/std",
	"bitvec/std",
	"rustc-hex/std",
	"parity-scale-codec/std",
	"scale-info/std",
	"sp-authority-discovery/std",
	"sp-inherents/std",
	"sp-core/std",
	"sp-api/std",
	"sp-transaction-pool/std",
	"sp-block-builder/std",
	"sp-offchain/std",
	"sp-std/std",
	"sp-runtime/std",
	"sp-arithmetic/std",
	"sp-staking/std",
	"sp-version/std",
	"sp-npos-elections/std",
	"sp-consensus-babe/std",
	"sp-session/std",
	"frame-try-runtime/std",
	"frame-election-provider-support/std",
	"frame-support/std",
	"frame-executive/std",
	"frame-system/std",
	"frame-system-rpc-runtime-api/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-bounties/std",
	"pallet-child-bounties/std",
	"pallet-referenda/std",
	"pallet-conviction-voting/std",
	"pallet-contracts/std",
	"pallet-contracts-primitives/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-elections-phragmen/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-democracy/std",
	"pallet-fast-unstake/std",
	"pallet-grandpa/std",
	"pallet-identity/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"pallet-membership/std",
	"pallet-message-queue/std",
	"pallet-multisig/std",
	"pallet-offences/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-scheduler/std",
	"pallet-session/std",
	"pallet-staking/std",
	"pallet-timestamp/std",
	"pallet-treasury/std",
	"pallet-babe/std",
	"pallet-vesting/std",
	"pallet-utility/std",
	"pallet-whitelist/std",
	"pallet-staking-runtime-api/std",
	"pallet-sudo/std",
	"pallet-recovery/std",
	"pallet-starknet/std",
	"pallet-starknet-runtime-api/std",
	"mp-program-hash/std",
	"mp-felt/std",
	"mp-simulations/std",
	"mp-chain-id/std",
	"mp-hashers/std",
	"selendra-runtime-common/std",
	"selendra-primitives/std",
	"selendra-runtime-constants/std",
]

runtime-benchmarks = [
	"selendra-runtime-common/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-conviction-voting/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-election-provider-support-benchmarking/runtime-benchmarks",
	"pallet-fast-unstake/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-whitelist/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-offences-benchmarking/runtime-benchmarks",
	"pallet-session-benchmarking/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"hex-literal",
	"frame-election-provider-support/runtime-benchmarks",
]
try-runtime = [
	"frame-executive/try-runtime",
	"frame-try-runtime",
	"frame-system/try-runtime",
	"selendra-runtime-common/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-conviction-voting/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-elections-phragmen/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-fast-unstake/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-whitelist/try-runtime",
	"pallet-session/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-utility/try-runtime",
]